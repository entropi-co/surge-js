{
	"id": 0,
	"name": "@entropi-co/surge-js",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 597,
			"name": "AuthApiError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 598,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 33,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 599,
							"name": "new AuthApiError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 600,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 601,
									"name": "status",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 602,
									"name": "code",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 597,
								"name": "AuthApiError"
							},
							"overwrites": {
								"type": "reference",
								"id": 590,
								"name": "AuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 589,
						"name": "AuthError.constructor"
					}
				},
				{
					"id": 604,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 594,
						"name": "AuthError.code"
					}
				},
				{
					"id": 603,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"overwrites": {
						"type": "reference",
						"id": 595,
						"name": "AuthError.status"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						598
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						604,
						603
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 30,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 588,
					"name": "AuthError"
				}
			]
		},
		{
			"id": 588,
			"name": "AuthError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 589,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 18,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 590,
							"name": "new AuthError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 591,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 592,
									"name": "status",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 593,
									"name": "code",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 588,
								"name": "AuthError"
							},
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Error.constructor"
					}
				},
				{
					"id": 594,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 595,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 14,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						589
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						594,
						595
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 4,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Error",
					"package": "typescript",
					"name": "Error"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 597,
					"name": "AuthApiError"
				},
				{
					"type": "reference",
					"id": 606,
					"name": "AuthUnknownError"
				},
				{
					"type": "reference",
					"id": 615,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 648,
			"name": "AuthImplicitGrantRedirectError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 649,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 90,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 650,
							"name": "new AuthImplicitGrantRedirectError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 651,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 652,
									"name": "details",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 653,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 655,
															"name": "code",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/lib/errors.ts",
																	"line": 90,
																	"character": 57
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 654,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/lib/errors.ts",
																	"line": 90,
																	"character": 42
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																655,
																654
															]
														}
													]
												}
											}
										]
									},
									"defaultValue": "null"
								}
							],
							"type": {
								"type": "reference",
								"id": 648,
								"name": "AuthImplicitGrantRedirectError"
							},
							"overwrites": {
								"type": "reference",
								"id": 617,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 616,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 672,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 624,
						"name": "CustomAuthError.code"
					}
				},
				{
					"id": 656,
					"name": "details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 89,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 657,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 659,
											"name": "code",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 89,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 658,
											"name": "error",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 89,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												659,
												658
											]
										}
									]
								}
							}
						]
					},
					"defaultValue": "null"
				},
				{
					"id": 670,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 622,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 671,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 623,
						"name": "CustomAuthError.status"
					}
				},
				{
					"id": 660,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 95,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 661,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 662,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 664,
											"name": "details",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 97,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 665,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 667,
																	"name": "code",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/lib/errors.ts",
																			"line": 97,
																			"character": 30
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 666,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/lib/errors.ts",
																			"line": 97,
																			"character": 15
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		667,
																		666
																	]
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 668,
											"name": "message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 98,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 663,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 96,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 669,
											"name": "status",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 99,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												664,
												668,
												663,
												669
											]
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						649
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						672,
						656,
						670,
						671
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						660
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 88,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 615,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 640,
			"name": "AuthInvalidCredentialsError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 641,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 83,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 642,
							"name": "new AuthInvalidCredentialsError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 643,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 640,
								"name": "AuthInvalidCredentialsError"
							},
							"overwrites": {
								"type": "reference",
								"id": 617,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 616,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 646,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 624,
						"name": "CustomAuthError.code"
					}
				},
				{
					"id": 644,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 622,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 645,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 623,
						"name": "CustomAuthError.status"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						641
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						646,
						644,
						645
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 82,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 615,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 633,
			"name": "AuthInvalidTokenResponseError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 634,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 77,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 635,
							"name": "new AuthInvalidTokenResponseError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 633,
								"name": "AuthInvalidTokenResponseError"
							},
							"overwrites": {
								"type": "reference",
								"id": 617,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 616,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 638,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 624,
						"name": "CustomAuthError.code"
					}
				},
				{
					"id": 636,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 622,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 637,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 623,
						"name": "CustomAuthError.status"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						634
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						638,
						636,
						637
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 76,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 615,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 674,
			"name": "AuthPKCEGrantCodeExchangeError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 675,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 113,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 676,
							"name": "new AuthPKCEGrantCodeExchangeError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 677,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 678,
									"name": "details",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 679,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 681,
															"name": "code",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/lib/errors.ts",
																	"line": 113,
																	"character": 57
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 680,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/lib/errors.ts",
																	"line": 113,
																	"character": 42
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																681,
																680
															]
														}
													]
												}
											}
										]
									},
									"defaultValue": "null"
								}
							],
							"type": {
								"type": "reference",
								"id": 674,
								"name": "AuthPKCEGrantCodeExchangeError"
							},
							"overwrites": {
								"type": "reference",
								"id": 617,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 616,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 698,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 624,
						"name": "CustomAuthError.code"
					}
				},
				{
					"id": 682,
					"name": "details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 111,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 683,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 685,
											"name": "code",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 111,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 684,
											"name": "error",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 111,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												685,
												684
											]
										}
									]
								}
							}
						]
					},
					"defaultValue": "null"
				},
				{
					"id": 696,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 622,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 697,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 623,
						"name": "CustomAuthError.status"
					}
				},
				{
					"id": 686,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 118,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 687,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 688,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 690,
											"name": "details",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 120,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 691,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 693,
																	"name": "code",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/lib/errors.ts",
																			"line": 120,
																			"character": 30
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 692,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/lib/errors.ts",
																			"line": 120,
																			"character": 15
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		693,
																		692
																	]
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 694,
											"name": "message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 121,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 689,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 119,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 695,
											"name": "status",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 122,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												690,
												694,
												689,
												695
											]
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						675
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						698,
						682,
						696,
						697
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						686
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 110,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 615,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 700,
			"name": "AuthRetryableFetchError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 701,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 134,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 702,
							"name": "new AuthRetryableFetchError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 703,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 704,
									"name": "status",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 700,
								"name": "AuthRetryableFetchError"
							},
							"overwrites": {
								"type": "reference",
								"id": 617,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 616,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 707,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 624,
						"name": "CustomAuthError.code"
					}
				},
				{
					"id": 705,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 622,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 706,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 623,
						"name": "CustomAuthError.status"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						701
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						707,
						705,
						706
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 133,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 615,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 626,
			"name": "AuthSessionMissingError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 627,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 67,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 628,
							"name": "new AuthSessionMissingError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 626,
								"name": "AuthSessionMissingError"
							},
							"overwrites": {
								"type": "reference",
								"id": 617,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 616,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 631,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 624,
						"name": "CustomAuthError.code"
					}
				},
				{
					"id": 629,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 622,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 630,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 623,
						"name": "CustomAuthError.status"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						627
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						631,
						629,
						630
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 66,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 615,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 606,
			"name": "AuthUnknownError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 607,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 48,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 608,
							"name": "new AuthUnknownError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 609,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 610,
									"name": "originalError",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 606,
								"name": "AuthUnknownError"
							},
							"overwrites": {
								"type": "reference",
								"id": 590,
								"name": "AuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 589,
						"name": "AuthError.constructor"
					}
				},
				{
					"id": 612,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 594,
						"name": "AuthError.code"
					}
				},
				{
					"id": 611,
					"name": "originalError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 46,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 613,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 14,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 595,
						"name": "AuthError.status"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						607
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						612,
						611,
						613
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 45,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 588,
					"name": "AuthError"
				}
			]
		},
		{
			"id": 709,
			"name": "AuthWeakPasswordError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "This error is thrown on certain methods when the password used is deemed\nweak. Inspect the reasons to identify what password strength rules are\ninadequate."
			},
			"children": [
				{
					"id": 710,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 154,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 711,
							"name": "new AuthWeakPasswordError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 712,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 713,
									"name": "status",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 714,
									"name": "reasons",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 709,
								"name": "AuthWeakPasswordError"
							},
							"overwrites": {
								"type": "reference",
								"id": 617,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 616,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 718,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 624,
						"name": "CustomAuthError.code"
					}
				},
				{
					"id": 716,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 622,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 715,
					"name": "reasons",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Reasons why the password is deemed weak."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 152,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 717,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 623,
						"name": "CustomAuthError.status"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						710
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						718,
						716,
						715,
						717
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 148,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 615,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 615,
			"name": "CustomAuthError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 616,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 59,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 617,
							"name": "new CustomAuthError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 618,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 619,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 620,
									"name": "status",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 621,
									"name": "code",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 615,
								"name": "CustomAuthError"
							},
							"overwrites": {
								"type": "reference",
								"id": 590,
								"name": "AuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 589,
						"name": "AuthError.constructor"
					}
				},
				{
					"id": 624,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 594,
						"name": "AuthError.code"
					}
				},
				{
					"id": 622,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "AuthError.name"
					}
				},
				{
					"id": 623,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTTP status code that caused the error."
					},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"overwrites": {
						"type": "reference",
						"id": 595,
						"name": "AuthError.status"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						616
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						624,
						622,
						623
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 55,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 588,
					"name": "AuthError"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 626,
					"name": "AuthSessionMissingError"
				},
				{
					"type": "reference",
					"id": 633,
					"name": "AuthInvalidTokenResponseError"
				},
				{
					"type": "reference",
					"id": 640,
					"name": "AuthInvalidCredentialsError"
				},
				{
					"type": "reference",
					"id": 648,
					"name": "AuthImplicitGrantRedirectError"
				},
				{
					"type": "reference",
					"id": 674,
					"name": "AuthPKCEGrantCodeExchangeError"
				},
				{
					"type": "reference",
					"id": 700,
					"name": "AuthRetryableFetchError"
				},
				{
					"type": "reference",
					"id": 709,
					"name": "AuthWeakPasswordError"
				}
			]
		},
		{
			"id": 312,
			"name": "NavigatorLockAcquireTimeoutError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 313,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 314,
							"name": "new NavigatorLockAcquireTimeoutError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 315,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 312,
								"name": "NavigatorLockAcquireTimeoutError"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LockAcquireTimeoutError.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "LockAcquireTimeoutError.constructor"
					}
				},
				{
					"id": 316,
					"name": "isAcquireTimeout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/lib/locks.ts",
							"line": 24,
							"character": 18
						}
					],
					"type": {
						"type": "literal",
						"value": true
					},
					"defaultValue": "true",
					"inheritedFrom": {
						"type": "reference",
						"name": "LockAcquireTimeoutError.isAcquireTimeout"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						313
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						316
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/locks.ts",
					"line": 31,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "LockAcquireTimeoutError"
				}
			]
		},
		{
			"id": 1,
			"name": "SurgeClient",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 3,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SurgeClient.ts",
							"line": 141,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 4,
							"name": "new SurgeClient",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new client for use in the browser."
							},
							"parameters": [
								{
									"id": 5,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 332,
										"name": "SurgeClientOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "default"
							}
						}
					]
				},
				{
					"id": 209,
					"name": "_signOutJwt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SurgeClient.ts",
							"line": 1177,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 210,
							"name": "_signOutJwt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a logged-in session."
							},
							"parameters": [
								{
									"id": 211,
									"name": "jwt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A valid, logged-in JWT."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 212,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The logout scope.\n\nTODO: Endpoint /logout is not implemented yet\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "global"
											},
											{
												"type": "literal",
												"value": "local"
											},
											{
												"type": "literal",
												"value": "others"
											}
										]
									},
									"defaultValue": "'global'"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 213,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 214,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/SurgeClient.ts",
															"line": 1180,
															"character": 15
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 215,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/SurgeClient.ts",
															"line": 1180,
															"character": 27
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 588,
																"name": "AuthError"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														214,
														215
													]
												}
											]
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 82,
					"name": "getSession",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SurgeClient.ts",
							"line": 526,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 83,
							"name": "getSession",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the session, refreshing it if necessary.",
								"text": "The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n\n**IMPORTANT:** This method loads values directly from the storage attached\nto the client. If that storage is based on request cookies for example,\nthe values in it may not be authentic and therefore it's strongly advised\nagainst using this method and its results in such circumstances. A warning\nwill be emitted if this is detected. Use {@link #getUser()} instead.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 84,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 85,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/SurgeClient.ts",
																	"line": 527,
																	"character": 8
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 86,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 87,
																			"name": "session",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/SurgeClient.ts",
																					"line": 527,
																					"character": 16
																				}
																			],
																			"type": {
																				"type": "reference",
																				"id": 434,
																				"name": "Session"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				87
																			]
																		}
																	]
																}
															}
														},
														{
															"id": 88,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/SurgeClient.ts",
																	"line": 527,
																	"character": 36
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																85,
																88
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 89,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 90,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/SurgeClient.ts",
																	"line": 529,
																	"character": 8
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 91,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 92,
																			"name": "session",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/SurgeClient.ts",
																					"line": 529,
																					"character": 16
																				}
																			],
																			"type": {
																				"type": "literal",
																				"value": null
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				92
																			]
																		}
																	]
																}
															}
														},
														{
															"id": 93,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/SurgeClient.ts",
																	"line": 530,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"id": 588,
																"name": "AuthError"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																90,
																93
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 94,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 95,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/SurgeClient.ts",
																	"line": 532,
																	"character": 8
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 96,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 97,
																			"name": "session",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/SurgeClient.ts",
																					"line": 532,
																					"character": 16
																				}
																			],
																			"type": {
																				"type": "literal",
																				"value": null
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				97
																			]
																		}
																	]
																}
															}
														},
														{
															"id": 98,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/SurgeClient.ts",
																	"line": 532,
																	"character": 33
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																95,
																98
															]
														}
													]
												}
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 145,
					"name": "getUser",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SurgeClient.ts",
							"line": 756,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 146,
							"name": "getUser",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the current user details if there is an existing session. This method\nperforms a network request to the Surge API, so the returned\nvalue is authentic and can be used to base authorization rules on."
							},
							"parameters": [
								{
									"id": 147,
									"name": "jwt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 423,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 52,
					"name": "initialize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SurgeClient.ts",
							"line": 237,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 53,
							"name": "initialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Initializes the client session either from the url or from storage.\nThis method is automatically called when instantiating the client, but should also be called\nmanually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc)."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 560,
										"name": "InitializeResult"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 221,
					"name": "onAuthStateChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SurgeClient.ts",
							"line": 1234,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 222,
							"name": "onAuthStateChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Receive a notification every time an auth event happens."
							},
							"parameters": [
								{
									"id": 223,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A callback function to be invoked when an auth event happens.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 224,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 225,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 226,
															"name": "event",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 322,
																"name": "AuthChangeEvent"
															}
														},
														{
															"id": 227,
															"name": "session",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"id": 434,
																		"name": "Session"
																	}
																]
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 228,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 229,
											"name": "data",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/SurgeClient.ts",
													"line": 1237,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 230,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 231,
															"name": "subscription",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/SurgeClient.ts",
																	"line": 1237,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"id": 503,
																"name": "Subscription"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																231
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												229
											]
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 175,
					"name": "refreshSession",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SurgeClient.ts",
							"line": 968,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 176,
							"name": "refreshSession",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new session, regardless of expiry status.\nTakes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\nIf the current session's refresh token is invalid, an error will be thrown."
							},
							"parameters": [
								{
									"id": 177,
									"name": "currentSession",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The current session. If passed in, it must contain a refresh token.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 178,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 179,
													"name": "refresh_token",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/SurgeClient.ts",
															"line": 968,
															"character": 42
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														179
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 359,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 163,
					"name": "setSession",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SurgeClient.ts",
							"line": 893,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 164,
							"name": "setSession",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\nIf the refresh token or access token in the current session is invalid, an error will be thrown."
							},
							"parameters": [
								{
									"id": 165,
									"name": "currentSession",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The current session that minimally contains an access token and refresh token.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 166,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 167,
													"name": "access_token",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/SurgeClient.ts",
															"line": 894,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 168,
													"name": "refresh_token",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/SurgeClient.ts",
															"line": 895,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														167,
														168
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 359,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 62,
					"name": "signInWithOAuth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SurgeClient.ts",
							"line": 468,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 63,
							"name": "signInWithOAuth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Log in an existing user via a third-party provider.\nThis method does not support the PKCE flow due to limit of Surge. This will be fixed later."
							},
							"parameters": [
								{
									"id": 64,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 544,
										"name": "SignInWithOAuthCredentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 401,
										"name": "OAuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 59,
					"name": "signInWithPassword",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SurgeClient.ts",
							"line": 400,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 60,
							"name": "signInWithPassword",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Log in an existing user with an email and password or phone and password."
							},
							"parameters": [
								{
									"id": 61,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 542,
										"name": "SignInWithPasswordCredentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 386,
										"name": "AuthTokenResponsePassword"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 204,
					"name": "signOut",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SurgeClient.ts",
							"line": 1162,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 205,
							"name": "signOut",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.",
								"text": "For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\nThere is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n\nIf using `others` scope, no `SIGNED_OUT` event is fired!\n"
							},
							"parameters": [
								{
									"id": 206,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 570,
										"name": "SignOut"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 207,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 208,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/SurgeClient.ts",
															"line": 1162,
															"character": 67
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 588,
																"name": "AuthError"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														208
													]
												}
											]
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 56,
					"name": "signUp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SurgeClient.ts",
							"line": 323,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 57,
							"name": "signUp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a new user.",
								"text": "Be aware that if a user account exists in the system you may get back an\nerror message that attempts to hide this information from the user.\nThis method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n",
								"returns": "A logged-in session if the server has \"autoconfirm\" ON"
							},
							"parameters": [
								{
									"id": 58,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 527,
										"name": "SignUpWithPasswordCredentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 359,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 280,
					"name": "startAutoRefresh",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SurgeClient.ts",
							"line": 1633,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 281,
							"name": "startAutoRefresh",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Starts an auto-refresh process in the background. The session is checked\nevery few seconds. Close to the time of expiration a process is started to\nrefresh the session. If refreshing fails it will be retried for as long as\nnecessary.",
								"text": "If you set the {@link SurgeClientOptions#autoRefreshToken} you don't need\nto call this function, it will be called for you.\n\nOn browsers the refresh process works only when the tab/window is in the\nforeground to conserve resources as well as prevent race conditions and\nflooding auth with requests. If you call this method any managed\nvisibility change callback will be removed and you must manage visibility\nchanges on your own.\n\nOn non-browser platforms the refresh process works *continuously* in the\nbackground, which may not be desirable. You should hook into your\nplatform's foreground indication mechanism and call these methods\nappropriately to conserve resources.\n\n{@see #stopAutoRefresh}\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 282,
					"name": "stopAutoRefresh",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SurgeClient.ts",
							"line": 1646,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 283,
							"name": "stopAutoRefresh",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Stops an active auto refresh process running in the background (if any).",
								"text": "If you call this method any managed visibility change callback will be\nremoved and you must manage visibility changes on your own.\n\nSee {@link #startAutoRefresh} for more details.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 151,
					"name": "updateUser",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SurgeClient.ts",
							"line": 819,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 152,
							"name": "updateUser",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Updates user data for a logged in user.",
								"text": "**THIS IS NOT YET IMPLEMENTED ON SURGE-CORE**\nTODO: Implement endpoint on the server - PUT /user\n"
							},
							"parameters": [
								{
									"id": 153,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 497,
										"name": "UserAttributes"
									}
								},
								{
									"id": 154,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 155,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 156,
													"name": "emailRedirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/SurgeClient.ts",
															"line": 822,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														156
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 423,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						3
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						209,
						82,
						145,
						52,
						221,
						175,
						163,
						62,
						59,
						204,
						56,
						280,
						282,
						151
					]
				}
			],
			"sources": [
				{
					"fileName": "src/SurgeClient.ts",
					"line": 91,
					"character": 21
				}
			]
		},
		{
			"id": 443,
			"name": "AMREntry",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "An authentication methord reference (AMR) entry.",
				"text": "An entry designates what method was used by the user to verify their\nidentity and at what time.\n",
				"tags": [
					{
						"tag": "see",
						"text": "{@link SurgeMFAApi#getAuthenticatorAssuranceLevel}.\n"
					}
				]
			},
			"children": [
				{
					"id": 444,
					"name": "method",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Authentication method name."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 217,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 445,
					"name": "timestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Timestamp when the method was successfully used. Represents number of\nseconds since 1st January 1970 (UNIX epoch) in UTC."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 223,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						444,
						445
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 215,
					"character": 17
				}
			]
		},
		{
			"id": 458,
			"name": "Factor",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "A MFA factor.",
				"tags": [
					{
						"tag": "see",
						"text": "{@link SurgeMFAApi#enroll}"
					},
					{
						"tag": "see",
						"text": "{@link SurgeMFAApi#listFactors}"
					},
					{
						"tag": "see",
						"text": "{@link SurgeMFAAdminApi#listFactors}\n"
					}
				]
			},
			"children": [
				{
					"id": 463,
					"name": "created_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 261,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 461,
					"name": "factor_type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Type of factor. `totp` and `phone` supported with this version"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 256,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 460,
					"name": "friendly_name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 251,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 459,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "ID of the factor."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 248,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 462,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Factor's status."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 259,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "verified"
							},
							{
								"type": "literal",
								"value": "unverified"
							}
						]
					}
				},
				{
					"id": 464,
					"name": "updated_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 262,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						463,
						461,
						460,
						459,
						462,
						464
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 246,
					"character": 17
				}
			]
		},
		{
			"id": 434,
			"name": "Session",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 437,
					"name": "access_token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 190,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 440,
					"name": "expires_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 202,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 439,
					"name": "expires_in",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 198,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 436,
					"name": "provider_refresh_token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 186,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 435,
					"name": "provider_token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 181,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 438,
					"name": "refresh_token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A one-time used refresh token that never expires."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 194,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 441,
					"name": "token_type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 203,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 442,
					"name": "user",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 204,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 472,
						"name": "User"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						437,
						440,
						439,
						436,
						435,
						438,
						441,
						442
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 177,
					"character": 17
				}
			]
		},
		{
			"id": 503,
			"name": "Subscription",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 504,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The subscriber UUID. This will be set by the client."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 337,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 505,
					"name": "callback",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 341,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 506,
							"name": "callback",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "The function to call every time there is an event. eg: (eventName) => {}"
							},
							"parameters": [
								{
									"id": 507,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 322,
										"name": "AuthChangeEvent"
									}
								},
								{
									"id": 508,
									"name": "session",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 434,
												"name": "Session"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 509,
					"name": "unsubscribe",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 345,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 510,
							"name": "unsubscribe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Call this to remove the listener."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						504
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						505,
						509
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 333,
					"character": 17
				}
			]
		},
		{
			"id": 472,
			"name": "User",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 483,
					"name": "action_link",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 285,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 474,
					"name": "app_metadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 276,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 465,
						"name": "UserAppMetadata"
					}
				},
				{
					"id": 476,
					"name": "aud",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 278,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 477,
					"name": "confirmation_sent_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 279,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 488,
					"name": "confirmed_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 290,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 487,
					"name": "created_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 289,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 484,
					"name": "email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 286,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 479,
					"name": "email_change_sent_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 281,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 489,
					"name": "email_confirmed_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 291,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 496,
					"name": "factors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 298,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 458,
							"name": "Factor"
						}
					}
				},
				{
					"id": 473,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 275,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 494,
					"name": "identities",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 296,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 446,
							"name": "UserIdentity"
						}
					}
				},
				{
					"id": 482,
					"name": "invited_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 284,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 495,
					"name": "is_anonymous",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 297,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 491,
					"name": "last_sign_in_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 293,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 480,
					"name": "new_email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 282,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 481,
					"name": "new_phone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 283,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 485,
					"name": "phone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 287,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 490,
					"name": "phone_confirmed_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 292,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 478,
					"name": "recovery_sent_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 280,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 492,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 294,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 493,
					"name": "updated_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 295,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 475,
					"name": "user_metadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 277,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 469,
						"name": "UserMetadata"
					}
				},
				{
					"id": 486,
					"name": "username",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 288,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						483,
						474,
						476,
						477,
						488,
						487,
						484,
						479,
						489,
						496,
						473,
						494,
						482,
						495,
						491,
						480,
						481,
						485,
						490,
						478,
						492,
						493,
						475,
						486
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 274,
					"character": 17
				}
			]
		},
		{
			"id": 465,
			"name": "UserAppMetadata",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 466,
					"name": "provider",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 266,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						466
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 265,
					"character": 17
				}
			],
			"indexSignature": {
				"id": 467,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 468,
						"name": "key",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "any"
				}
			}
		},
		{
			"id": 497,
			"name": "UserAttributes",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 502,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
						"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 330,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 498,
					"name": "email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's email."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 305,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 501,
					"name": "nonce",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
						"text": "Call reauthenticate() to obtain the nonce first.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 322,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 500,
					"name": "password",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's password."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 315,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 499,
					"name": "phone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's phone."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 310,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						502,
						498,
						501,
						500,
						499
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 301,
					"character": 17
				}
			]
		},
		{
			"id": 446,
			"name": "UserIdentity",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 455,
					"name": "created_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 234,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 447,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 227,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 449,
					"name": "identity_data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 229,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 450,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 451,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 452,
										"name": "key",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					}
				},
				{
					"id": 453,
					"name": "identity_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 232,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 456,
					"name": "last_sign_in_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 235,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 454,
					"name": "provider",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 233,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 457,
					"name": "updated_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 236,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 448,
					"name": "user_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 228,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						455,
						447,
						449,
						453,
						456,
						454,
						457,
						448
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 226,
					"character": 17
				}
			]
		},
		{
			"id": 469,
			"name": "UserMetadata",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 270,
					"character": 17
				}
			],
			"indexSignature": {
				"id": 470,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 471,
						"name": "key",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "any"
				}
			}
		},
		{
			"id": 322,
			"name": "AuthChangeEvent",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "INITIAL_SESSION"
					},
					{
						"type": "literal",
						"value": "PASSWORD_RECOVERY"
					},
					{
						"type": "literal",
						"value": "SIGNED_IN"
					},
					{
						"type": "literal",
						"value": "SIGNED_OUT"
					},
					{
						"type": "literal",
						"value": "TOKEN_REFRESHED"
					},
					{
						"type": "literal",
						"value": "USER_UPDATED"
					},
					{
						"type": "reference",
						"id": 321,
						"name": "AuthChangeEventMFA"
					}
				]
			}
		},
		{
			"id": 321,
			"name": "AuthChangeEventMFA",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 7,
					"character": 12
				}
			],
			"type": {
				"type": "literal",
				"value": "MFA_CHALLENGE_VERIFIED"
			}
		},
		{
			"id": 543,
			"name": "AuthFlowType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 395,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "implicit"
					},
					{
						"type": "literal",
						"value": "pkce"
					}
				]
			}
		},
		{
			"id": 359,
			"name": "AuthResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 77,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 360,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 361,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 79,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 362,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 364,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 81,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 434,
																"name": "Session"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 363,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 80,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 472,
																"name": "User"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														364,
														363
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 79,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 365,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 83,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										361,
										365
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 78,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 366,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 367,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 86,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 368,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 370,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 88,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 369,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 87,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														370,
														369
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 86,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 371,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 90,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 588,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										367,
										371
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 85,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 372,
			"name": "AuthResponsePassword",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 93,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 373,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 374,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 95,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 375,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 377,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 97,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 434,
																"name": "Session"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 376,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 96,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 472,
																"name": "User"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 378,
													"name": "weak_password",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 98,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 355,
																"name": "WeakPassword"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														377,
														376,
														378
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 95,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 379,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 100,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										374,
										379
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 94,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 380,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 381,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 103,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 382,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 384,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 105,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 383,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 104,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														384,
														383
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 103,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 385,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 107,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 588,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										381,
										385
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 102,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 386,
			"name": "AuthTokenResponsePassword",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 110,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 387,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 388,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 112,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 389,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 391,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 114,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 434,
														"name": "Session"
													}
												},
												{
													"id": 390,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 113,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 472,
														"name": "User"
													}
												},
												{
													"id": 392,
													"name": "weakPassword",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 115,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 355,
														"name": "WeakPassword"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														391,
														390,
														392
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 112,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 393,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 117,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										388,
										393
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 111,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 394,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 395,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 120,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 396,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 398,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 122,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 397,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 121,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 399,
													"name": "weakPassword",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 123,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														398,
														397,
														399
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 120,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 400,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 125,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 588,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										395,
										400
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 119,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 556,
			"name": "AuthenticatorAssuranceLevels",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 412,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "aal1"
					},
					{
						"type": "literal",
						"value": "aal2"
					}
				]
			}
		},
		{
			"id": 563,
			"name": "CallRefreshTokenResult",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 438,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 564,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 566,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 441,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 565,
									"name": "session",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 440,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 434,
										"name": "Session"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										566,
										565
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 439,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 567,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 569,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 445,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 588,
										"name": "AuthError"
									}
								},
								{
									"id": 568,
									"name": "session",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 444,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										569,
										568
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 443,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 560,
			"name": "InitializeResult",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 436,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 561,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 562,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 436,
									"character": 33
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 588,
										"name": "AuthError"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								562
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 436,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 323,
			"name": "LockFunc",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 33,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 324,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 33,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 325,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Provide your own global lock implementation instead of the default\nimplementation. The function should acquire a lock for the duration of the\n`fn` async function, such that no other client instances will be able to\nhold it at the same time.",
								"tags": [
									{
										"tag": "experimental",
										"text": "\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 331,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 326,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Name of the lock to be acquired."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 327,
									"name": "acquireTimeout",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "If negative, no timeout should occur. If positive it\n                      should throw an Error with an `isAcquireTimeout`\n                      property set to true if the operation fails to be\n                      acquired after this much time (ms)."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 328,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The operation to execute when the lock is acquired.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 329,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 33,
													"character": 69
												}
											],
											"signatures": [
												{
													"id": 330,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 331,
																"name": "R"
															}
														],
														"qualifiedName": "Promise",
														"package": "typescript",
														"name": "Promise"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 331,
										"name": "R"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			}
		},
		{
			"id": 401,
			"name": "OAuthResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 128,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 402,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 403,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 130,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 404,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 405,
													"name": "provider",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 131,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 320,
														"name": "Provider"
													}
												},
												{
													"id": 406,
													"name": "url",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 132,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														405,
														406
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 130,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 407,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 134,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										403,
										407
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 129,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 408,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 409,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 137,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 410,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 411,
													"name": "provider",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 138,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 320,
														"name": "Provider"
													}
												},
												{
													"id": 412,
													"name": "url",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 139,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														411,
														412
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 137,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 413,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 141,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 588,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										409,
										413
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 136,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 320,
			"name": "Provider",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "One of the providers supported by Surge."
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 5,
					"character": 12
				}
			],
			"type": {
				"type": "literal",
				"value": "google"
			}
		},
		{
			"id": 414,
			"name": "SSOResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 144,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 415,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 416,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 146,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 417,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 418,
													"name": "url",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "URL to open in a browser which will complete the sign-in flow by\ntaking the user to the identity provider's authentication flow.",
														"text": "On browsers you can set the URL to `window.location.href` to take\nthe user to the authentication flow.\n"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 154,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														418
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 146,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 419,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 156,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										416,
										419
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 145,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 420,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 421,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 159,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 422,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 160,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 588,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										421,
										422
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 158,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 534,
			"name": "SignInWithEmailPassword",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 380,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 535,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 536,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 381,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 537,
							"name": "password",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 382,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								536,
								537
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 380,
							"character": 38
						}
					]
				}
			}
		},
		{
			"id": 544,
			"name": "SignInWithOAuthCredentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 397,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 545,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 547,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 400,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 548,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 551,
											"name": "queryParams",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "An object of query params"
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 406,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 552,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 406,
															"character": 18
														}
													],
													"indexSignature": {
														"id": 553,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 554,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											}
										},
										{
											"id": 549,
											"name": "redirectTo",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A URL to send the user to after they are confirmed."
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 402,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 550,
											"name": "scopes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A space-separated list of scopes granted to the OAuth application."
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 404,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 555,
											"name": "skipBrowserRedirect",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If set to true does not immediately redirect the current browser context to visit the OAuth authorization page for the provider."
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 408,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												551,
												549,
												550,
												555
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 400,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 546,
							"name": "provider",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "One of the providers supported by Surge."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 399,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 320,
								"name": "Provider"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								547,
								546
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 397,
							"character": 41
						}
					]
				}
			}
		},
		{
			"id": 542,
			"name": "SignInWithPasswordCredentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 390,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 530,
						"name": "SignInWithUsernamePassword"
					},
					{
						"type": "reference",
						"id": 538,
						"name": "SignInWithPhonePassword"
					},
					{
						"type": "reference",
						"id": 534,
						"name": "SignInWithEmailPassword"
					}
				]
			}
		},
		{
			"id": 538,
			"name": "SignInWithPhonePassword",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 385,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 539,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 541,
							"name": "password",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 387,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 540,
							"name": "phone",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 386,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								541,
								540
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 385,
							"character": 38
						}
					]
				}
			}
		},
		{
			"id": 530,
			"name": "SignInWithUsernamePassword",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 375,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 531,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 533,
							"name": "password",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 377,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 532,
							"name": "username",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 376,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								533,
								532
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 375,
							"character": 41
						}
					]
				}
			}
		},
		{
			"id": 570,
			"name": "SignOut",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 448,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 571,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 572,
							"name": "scope",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Determines which sessions should be\nlogged out. Global means all\nsessions by this account. Local\nmeans only this session. Others\nmeans all other sessions except the\ncurrent one. When using others,\nthere is no sign-out event fired on\nthe current session!"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 459,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "global"
									},
									{
										"type": "literal",
										"value": "local"
									},
									{
										"type": "literal",
										"value": "others"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								572
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 448,
							"character": 22
						}
					]
				}
			}
		},
		{
			"id": 514,
			"name": "SignUpWithEmailPassword",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 352,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 515,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 516,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 353,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 517,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 354,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 518,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 519,
											"name": "emailRedirectTo",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 355,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												519
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 354,
											"character": 12
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								516,
								517
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 352,
							"character": 38
						}
					]
				}
			}
		},
		{
			"id": 527,
			"name": "SignUpWithPasswordCredentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 371,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"id": 526,
						"name": "SignUpWithPasswordIdentifier"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 528,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 529,
									"name": "password",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 372,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										529
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 371,
									"character": 75
								}
							]
						}
					},
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 511,
										"name": "SignUpWithUsernamePassword"
									},
									{
										"type": "reference",
										"id": 514,
										"name": "SignUpWithEmailPassword"
									},
									{
										"type": "reference",
										"id": 520,
										"name": "SignUpWithPhonePassword"
									}
								]
							}
						],
						"qualifiedName": "Partial",
						"package": "typescript",
						"name": "Partial"
					}
				]
			}
		},
		{
			"id": 526,
			"name": "SignUpWithPasswordIdentifier",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 366,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 511,
						"name": "SignUpWithUsernamePassword"
					},
					{
						"type": "reference",
						"id": 514,
						"name": "SignUpWithEmailPassword"
					},
					{
						"type": "reference",
						"id": 520,
						"name": "SignUpWithPhonePassword"
					}
				]
			}
		},
		{
			"id": 520,
			"name": "SignUpWithPhonePassword",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 359,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 521,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 523,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 361,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 524,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 525,
											"name": "channel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 362,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "sms"
													},
													{
														"type": "literal",
														"value": "whatsapp"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												525
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 361,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 522,
							"name": "phone",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 360,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								523,
								522
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 359,
							"character": 38
						}
					]
				}
			}
		},
		{
			"id": 511,
			"name": "SignUpWithUsernamePassword",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 348,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 512,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 513,
							"name": "username",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 349,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								513
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 348,
							"character": 41
						}
					]
				}
			}
		},
		{
			"id": 557,
			"name": "SupportedStorage",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 423,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Storage",
										"package": "typescript",
										"name": "Storage"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "getItem"
											},
											{
												"type": "literal",
												"value": "setItem"
											},
											{
												"type": "literal",
												"value": "removeItem"
											}
										]
									}
								],
								"qualifiedName": "Pick",
								"package": "typescript",
								"name": "Pick"
							}
						],
						"name": "PromisifyMethods"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 558,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 559,
									"name": "isServer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If set to `true` signals to the library that the storage medium is used\non a server and the values may not be authentic, such as reading from\nrequest cookies. Implementations should not set this to true if the client\nis used on a server that reads storage information from authenticated\nsources, such as a secure database or file."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 433,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										559
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 425,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 332,
			"name": "SurgeClientOptions",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 35,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 333,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 341,
							"name": "autoRefreshToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 45,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 346,
							"name": "debug",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 55,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 347,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 55,
													"character": 21
												}
											],
											"signatures": [
												{
													"id": 348,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 349,
															"name": "message",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 350,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 340,
							"name": "detectSessionInUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 43,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 344,
							"name": "fetch",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 51,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "Fetch"
							}
						},
						{
							"id": 345,
							"name": "flowType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 53,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 543,
								"name": "AuthFlowType"
							}
						},
						{
							"id": 353,
							"name": "hasCustomAuthorizationHeader",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Set to \"true\" if there is a custom authorization header set globally.",
								"tags": [
									{
										"tag": "experimental",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 68,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 335,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 39,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 336,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 39,
											"character": 12
										}
									],
									"indexSignature": {
										"id": 337,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 338,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							}
						},
						{
							"id": 352,
							"name": "lock",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Provide your own locking mechanism based on the environment. By default no locking is done at this time.",
								"tags": [
									{
										"tag": "experimental",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 63,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 323,
								"name": "LockFunc"
							}
						},
						{
							"id": 342,
							"name": "persistSession",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 47,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 343,
							"name": "storage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 49,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 557,
								"name": "SupportedStorage"
							}
						},
						{
							"id": 339,
							"name": "storageKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 41,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 351,
							"name": "suppressGetSessionWarning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 57,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 334,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 37,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								341,
								346,
								340,
								344,
								345,
								353,
								335,
								352,
								342,
								343,
								339,
								351,
								334
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 35,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 423,
			"name": "UserResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 163,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 424,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 425,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 165,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 426,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 427,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 166,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 472,
														"name": "User"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														427
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 165,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 428,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 168,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										425,
										428
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 164,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 429,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 430,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 171,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 431,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 432,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 172,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														432
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 171,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 433,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 174,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 588,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										430,
										433
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 170,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 355,
			"name": "WeakPassword",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 72,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 356,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 358,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 74,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 357,
							"name": "reasons",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 73,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 354,
									"name": "WeakPasswordReasons"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								358,
								357
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 72,
							"character": 27
						}
					]
				}
			}
		},
		{
			"id": 354,
			"name": "WeakPasswordReasons",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 71,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "length"
					},
					{
						"type": "literal",
						"value": "characters"
					},
					{
						"type": "literal",
						"value": "pwned"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				]
			}
		},
		{
			"id": 317,
			"name": "lockInternals",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"tags": [
					{
						"tag": "experimental",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/lib/locks.ts",
					"line": 6,
					"character": 13
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 318,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 319,
							"name": "debug",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/locks.ts",
									"line": 6,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								319
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/locks.ts",
							"line": 6,
							"character": 24
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 576,
			"name": "isAuthApiError",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 41,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 577,
					"name": "isAuthApiError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 578,
							"name": "error",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "error",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 597,
							"name": "AuthApiError"
						}
					}
				}
			]
		},
		{
			"id": 573,
			"name": "isAuthError",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 26,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 574,
					"name": "isAuthError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 575,
							"name": "error",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "error",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 588,
							"name": "AuthError"
						}
					}
				}
			]
		},
		{
			"id": 582,
			"name": "isAuthRetryableFetchError",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 139,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 583,
					"name": "isAuthRetryableFetchError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 584,
							"name": "error",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "error",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 700,
							"name": "AuthRetryableFetchError"
						}
					}
				}
			]
		},
		{
			"id": 579,
			"name": "isAuthSessionMissingError",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 72,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 580,
					"name": "isAuthSessionMissingError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 581,
							"name": "error",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "error",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 626,
							"name": "AuthSessionMissingError"
						}
					}
				}
			]
		},
		{
			"id": 585,
			"name": "isAuthWeakPasswordError",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 161,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 586,
					"name": "isAuthWeakPasswordError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 587,
							"name": "error",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "error",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 709,
							"name": "AuthWeakPasswordError"
						}
					}
				}
			]
		},
		{
			"id": 304,
			"name": "navigatorLock",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/locks.ts",
					"line": 58,
					"character": 22
				}
			],
			"signatures": [
				{
					"id": 305,
					"name": "navigatorLock",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Implements a global exclusive lock using the Navigator LockManager API. It\nis available on all browsers released after 2022-03-15 with Safari being the\nlast one to release support. If the API is not available, this function will\nthrow. Make sure you check availablility before configuring {@link\nSurgeClient}.",
						"text": "You can turn on debugging by setting the `entropi.surge-js.locks.debug`\nlocal storage item to `true`.\n\nInternals:\n\nSince the LockManager API does not preserve stack traces for the async\nfunction passed in the `request` method, a trick is used where acquiring the\nlock releases a previously started promise to run the operation in the `fn`\nfunction. The lock waits for that promise to finish (with or without error),\nwhile the function will finally wait for the result anyway.\n"
					},
					"typeParameter": [
						{
							"id": 306,
							"name": "R",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 307,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Name of the lock to be acquired."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 308,
							"name": "acquireTimeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "If negative, no timeout. If 0 an error is thrown if\n                      the lock can't be acquired without waiting. If positive, the lock acquire\n                      will time out after so many milliseconds. An error is\n                      a timeout if it has `isAcquireTimeout` set to true."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 309,
							"name": "fn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "The operation to run once the lock is acquired.\n"
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 310,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 311,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 306,
														"name": "R"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 306,
								"name": "R"
							}
						],
						"qualifiedName": "Promise",
						"package": "typescript",
						"name": "Promise"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				597,
				588,
				648,
				640,
				633,
				674,
				700,
				626,
				606,
				709,
				615,
				312,
				1
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				443,
				458,
				434,
				503,
				472,
				465,
				497,
				446,
				469
			]
		},
		{
			"title": "Type Aliases",
			"kind": 4194304,
			"children": [
				322,
				321,
				543,
				359,
				372,
				386,
				556,
				563,
				560,
				323,
				401,
				320,
				414,
				534,
				544,
				542,
				538,
				530,
				570,
				514,
				527,
				526,
				520,
				511,
				557,
				332,
				423,
				355,
				354
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				317
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				576,
				573,
				582,
				579,
				585,
				304
			]
		}
	],
	"sources": [
		{
			"fileName": "src/index.ts",
			"line": 1,
			"character": 0
		}
	]
}